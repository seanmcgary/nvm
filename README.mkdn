# Node Version Manager (nvm)

Easily manage version of Node.js as well as modules

NOTE: Currently nvm will only work for a single user. Installing NodeJS and modules for the global machine and users is coming soon.

## Requirements

- Python 2.7
	- requests (available through easy_install an pip)

## Installation

Clone nvm to ~/.nvm

```git clone https://github.com/seanmcgary/nvm ~/.nvm```

Next, add the following to your shells rc file

```
export NVM_PATH=$HOME/.nvm
source $NVM_PATH/.nvmrc
```

Run the nvm_install script located in ```.nvm/bin/nvm_install```

After running, make sure source your shells rc file!

## Getting Started

To install a version of node, simply run:

```nvm install <nodejs version>```

In this case, the version is a tag in the NodeJS repository. To view all of the versions, you can run:

```nvm list known```

This will list all known version tags in the NodeJS repository, highlighting the installed versions in yellow and the current version in green.


## Components

All commands have an associated executable. The ```nvm``` binary is a simple interface that calls each of the executables to provide a uniform interface. Each of the executables is explained below.

### nvm
Available commands:

```
nvm <command> [command args]

Available commands:
	help		Show the help menu
	use			Select a version of NodeJS to use.
	install		Install a version of NodeJS
	list		List known, current, and installed versions
```

### nvm-use

Select a version of NodeJS to use.

```
nvm-use <nodejs version>
```

### nvm-install

Install a version of NodeJS

```
nvm-install <nodejs version>
```
